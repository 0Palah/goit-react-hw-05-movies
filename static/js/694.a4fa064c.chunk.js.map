{"version":3,"file":"static/js/694.a4fa064c.chunk.js","mappings":"+PAEMA,EAAY,mCAAG,8FAASC,EAAT,EAASA,QAAT,SACAC,EAAAA,EAAAA,IAAA,iBAA4BD,GAAW,CACxDE,OAAQ,CACNC,QAAS,sCAHM,cACbC,EADa,yBAMZA,EAAKA,MANO,2CAAH,sDASlB,ICVA,EAA4B,gCAA5B,EAA2E,mCAA3E,EAA2H,iCAA3H,EAAkK,0B,SCuElK,EAnEqB,WAAO,IAAD,QACzB,GAA8CC,EAAAA,EAAAA,YAA9C,eAAOC,EAAP,KAAwBC,EAAxB,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACFS,GAAWC,EAAAA,EAAAA,MAEXC,EAAmB,mCAAG,6GAEDZ,EAAa,CAAEC,QAAAA,IAFd,OAElBY,EAFkB,OAGxBL,EAAmBK,GAHK,gDAKxBC,MAAM,EAAD,IALmB,yDAAH,qDAczB,IALAC,EAAAA,EAAAA,YAAU,WACRH,GAED,GAAE,KAEEL,EAAiB,OAAO,KAE7B,IAAMS,EAAY,oBAAGN,EAASO,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIH,EAAcI,UAAWC,EAAnC,sBAGA,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXC,IAAG,iDAAqCf,QAArC,IAAqCA,OAArC,EAAqCA,EAAiBgB,aACzDC,IAAI,cAGR,4BACE,+BAAKjB,QAAL,IAAKA,OAAL,EAAKA,EAAiBkB,SACtB,6CAAmBC,KAAKC,MACU,IAAjB,OAAfpB,QAAe,IAAfA,OAAA,EAAAA,EAAiBqB,eADnB,QAGA,sCACA,8BAAIrB,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBsB,YACrB,oCACA,8BAAItB,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBuB,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,cAGxD,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMf,GAAI,OAAQF,MAAO,CAAEC,KAAI,UAAER,EAASO,aAAX,aAAE,EAAgBC,MAAjD,qBAIF,yBACE,SAAC,KAAD,CAAMC,GAAI,UAAWF,MAAO,CAAEC,KAAI,UAAER,EAASO,aAAX,aAAE,EAAgBC,MAApD,8BAMN,SAAC,KAAD,MAGL,C","sources":["services/fetchById.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import themoviedbApi from './axiosCreateAPI';\n\nconst getFetchById = async ({ movieId }) => {\n  const data = await themoviedbApi.get(`/movie/${movieId}`, {\n    params: {\n      api_key: 'd76cfeaddd14e5c6063db60e37f83b2f',\n    },\n  });\n  return data.data;\n};\n\nexport default getFetchById;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnGoBack\":\"MovieDetails_btnGoBack__wj+OK\",\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"imgWrapper\":\"MovieDetails_imgWrapper__1TLwc\",\"img\":\"MovieDetails_img__uOAom\"};","import React, { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport getFetchById from 'services/fetchById';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieDetailsObj, setMovieDetailsObj] = useState();\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const getFetchedMovieById = async () => {\n    try {\n      const response = await getFetchById({ movieId });\n      setMovieDetailsObj(response);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  useEffect(() => {\n    getFetchedMovieById();\n    // eslint-disable-next-line\n  }, []);\n\n  if (!movieDetailsObj) return null;\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <Link to={backLinkHref} className={css.btnGoBack}>\n        Go back\n      </Link>\n      <div className={css.movieDetails}>\n        <div className={css.imgWrapper}>\n          <img\n            className={css.img}\n            src={`https://image.tmdb.org/t/p/w500/${movieDetailsObj?.poster_path}`}\n            alt=\"poster\"\n          />\n        </div>\n        <div>\n          <h2>{movieDetailsObj?.title}</h2>\n          <p>{`User Score: ${Math.round(\n            movieDetailsObj?.vote_average * 10\n          )}%`}</p>\n          <h3>Overview</h3>\n          <p>{movieDetailsObj?.overview}</p>\n          <h3>Genres</h3>\n          <p>{movieDetailsObj?.genres.map(el => el.name).join(' ')}</p>\n        </div>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={'cast'} state={{ from: location.state?.from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={'reviews'} state={{ from: location.state?.from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getFetchById","movieId","themoviedbApi","params","api_key","data","useState","movieDetailsObj","setMovieDetailsObj","useParams","location","useLocation","getFetchedMovieById","response","alert","useEffect","backLinkHref","state","from","to","className","css","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","el","name","join"],"sourceRoot":""}