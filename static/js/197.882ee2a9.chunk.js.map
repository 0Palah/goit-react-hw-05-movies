{"version":3,"file":"static/js/197.882ee2a9.chunk.js","mappings":"+PAEMA,EAAc,mCAAG,8FAASC,EAAT,EAASA,YAAT,SACFC,EAAAA,EAAAA,IAAkB,gBAAiB,CACpDC,OAAQ,CACNC,QAAS,mCACTC,MAAOJ,KAJU,cACfK,EADe,yBAOdA,EAAKA,KAAKC,SAPI,2CAAH,sDAUpB,I,SC8CA,EAtDe,WAAO,IAAD,EACbC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAuBC,EAAvB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMd,EAAW,UAAGa,EAAaE,IAAI,gBAApB,QAAgC,GACjDC,QAAQC,IAAIjB,GAEZ,IAAMkB,EAAqB,mCAAG,6GAEHnB,EAAe,CAAEC,YAAAA,IAFd,OAEpBmB,EAFoB,OAG1BH,QAAQC,IAAIE,GACZR,EAAYQ,GAJc,gDAM1BH,QAAQC,IAAR,MAN0B,yDAAH,qDAsB3B,OALAG,EAAAA,EAAAA,YAAU,WACRpB,GAAekB,GAEhB,GAAE,CAAClB,KAGF,4BACE,kBAAMqB,OAAO,GAAGC,SAAU,SAAAC,GAAG,OAdP,SAAAA,GACxBA,EAAIC,iBACJ,IAAQC,EAAUF,EAAIG,OAAOC,YAArBF,MACRT,QAAQC,IAAIM,GACZT,EAA0B,KAAVW,EAAe,CAAErB,MAAOqB,GAAU,CAAC,EACpD,CASoCG,CAAkBL,EAAtB,EAA7B,WACE,kBAAOM,KAAK,OAAOC,KAAK,iBACxB,mBAAQD,KAAK,SAAb,uBAEDnB,EAAeqB,OAAS,IACvB,wBACGrB,EAAesB,KAAI,SAAAC,GAClB,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAGE,IAAMC,MAAO,CAAEC,KAAM9B,GAA7C,UACG,IACA0B,EAAGK,OAASL,EAAGH,KAAM,QAHjBG,EAAGE,GAOf,QAKV,C","sources":["components/services/fetchSearchMovie.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import themoviedbApi from './axiosCreateAPI';\n\nconst getSearchMovie = async ({ searchQuery }) => {\n  const data = await themoviedbApi.get('/search/movie', {\n    params: {\n      api_key: 'd76cfeaddd14e5c6063db60e37f83b2f',\n      query: searchQuery,\n    },\n  });\n  return data.data.results;\n};\n\nexport default getSearchMovie;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport getSearchMovie from 'components/services/fetchSearchMovie';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [moviesFoundArr, setFoundArr] = useState([]);\n  // const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  console.log(searchQuery);\n\n  const getFetchedSearchMovie = async () => {\n    try {\n      const response = await getSearchMovie({ searchQuery });\n      console.log(response);\n      setFoundArr(response);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChangeInput = evt => {\n    evt.preventDefault();\n    const { value } = evt.target.searchInput;\n    console.log(evt);\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  useEffect(() => {\n    searchQuery && getFetchedSearchMovie();\n    // eslint-disable-next-line\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={evt => handleChangeInput(evt)}>\n        <input type=\"text\" name=\"searchInput\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {moviesFoundArr.length > 0 && (\n        <ul>\n          {moviesFoundArr.map(el => {\n            return (\n              <li key={el.id}>\n                <Link to={`/movies/${el.id}`} state={{ from: location }}>\n                  {' '}\n                  {el.title || el.name}{' '}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["getSearchMovie","searchQuery","themoviedbApi","params","api_key","query","data","results","location","useLocation","useState","moviesFoundArr","setFoundArr","useSearchParams","searchParams","setSearchParams","get","console","log","getFetchedSearchMovie","response","useEffect","action","onSubmit","evt","preventDefault","value","target","searchInput","handleChangeInput","type","name","length","map","el","to","id","state","from","title"],"sourceRoot":""}