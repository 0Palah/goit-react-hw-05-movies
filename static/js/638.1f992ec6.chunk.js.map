{"version":3,"file":"static/js/638.1f992ec6.chunk.js","mappings":"+PAEMA,EAAc,mCAAG,8FAASC,EAAT,EAASA,YAAT,SACFC,EAAAA,EAAAA,IAAkB,gBAAiB,CACpDC,OAAQ,CACNC,QAAS,mCACTC,MAAOJ,KAJU,cACfK,EADe,yBAOdA,EAAKA,KAAKC,SAPI,2CAAH,sDAUpB,I,kBC2CA,EAlDe,WAAO,IAAD,EACbC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMd,EAAW,UAAGa,EAAaE,IAAI,gBAApB,QAAgC,GAE3CC,EAAqB,mCAAG,6GAEHjB,EAAe,CAAEC,YAAAA,IAFd,OAEpBiB,EAFoB,OAG1BN,EAAYM,GAHc,gDAK1BC,MAAM,EAAD,IALqB,yDAAH,qDAoB3B,OALAC,EAAAA,EAAAA,YAAU,WACRnB,GAAegB,GAEhB,GAAE,CAAChB,KAGF,4BACE,kBAAMoB,OAAO,GAAGC,SAAU,SAAAC,GAAG,OAbP,SAAAA,GACxBA,EAAIC,iBACJ,IAAQC,EAAUF,EAAIG,OAAOC,YAArBF,MACRV,EAA0B,KAAVU,EAAe,CAAEpB,MAAOoB,GAAU,CAAC,EACpD,CASoCG,CAAkBL,EAAtB,EAA7B,WACE,kBAAOM,KAAK,OAAOC,KAAK,iBACxB,mBAAQD,KAAK,SAAb,uBAEDlB,EAAeoB,OAAS,IACvB,wBACGpB,EAAeqB,KAAI,SAAAC,GAClB,OACE,SAACC,EAAA,EAAD,CAAsBD,GAAIA,EAAIzB,SAAUA,GAAzByB,EAAGE,GAOrB,QAKV,C","sources":["services/fetchSearchMovie.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import themoviedbApi from './axiosCreateAPI';\n\nconst getSearchMovie = async ({ searchQuery }) => {\n  const data = await themoviedbApi.get('/search/movie', {\n    params: {\n      api_key: 'd76cfeaddd14e5c6063db60e37f83b2f',\n      query: searchQuery,\n    },\n  });\n  return data.data.results;\n};\n\nexport default getSearchMovie;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport getSearchMovie from 'services/fetchSearchMovie';\nimport ListItem from 'components/ListItem/ListItem';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [moviesFoundArr, setFoundArr] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const getFetchedSearchMovie = async () => {\n    try {\n      const response = await getSearchMovie({ searchQuery });\n      setFoundArr(response);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const handleChangeInput = evt => {\n    evt.preventDefault();\n    const { value } = evt.target.searchInput;\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  useEffect(() => {\n    searchQuery && getFetchedSearchMovie();\n    // eslint-disable-next-line\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={evt => handleChangeInput(evt)}>\n        <input type=\"text\" name=\"searchInput\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {moviesFoundArr.length > 0 && (\n        <ul>\n          {moviesFoundArr.map(el => {\n            return (\n              <ListItem key={el.id} el={el} location={location} />\n              // <li key={el.id}>\n              //   <Link to={`/movies/${el.id}`} state={{ from: location }}>\n              //     {el.title || el.name}\n              //   </Link>\n              // </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["getSearchMovie","searchQuery","themoviedbApi","params","api_key","query","data","results","location","useLocation","useState","moviesFoundArr","setFoundArr","useSearchParams","searchParams","setSearchParams","get","getFetchedSearchMovie","response","alert","useEffect","action","onSubmit","evt","preventDefault","value","target","searchInput","handleChangeInput","type","name","length","map","el","ListItem","id"],"sourceRoot":""}